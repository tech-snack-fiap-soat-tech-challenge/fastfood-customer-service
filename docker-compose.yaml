services:
  customer-db:
    image: postgres:latest
    container_name: customer.db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: customer_db
    ports:
      - '5432:5432'
    networks:
      - svc_ntw
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $DB_USERNAME -d $DB_NAME || exit 1']
      interval: 15s
      timeout: 10s
      retries: 5

  customer-api:
    image: img-customer-api:latest
    container_name: customer.api
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_HOST: host.docker.internal
      DB_PORT: 5432
      DB_NAME: customer_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    ports:
      - '3000:3000'
    networks:
      - svc_ntw
    depends_on:
      customer-db:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'wget --spider -q http://localhost:3000/health/ready || exit 1']
      interval: 15s
      timeout: 10s
      retries: 5

volumes:
  db_data:
    driver: local

networks:
  svc_ntw:
    driver: bridge
